/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.cleartraders.webadmin.controller.form;

import javax.servlet.http.HttpServletRequest;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;

import com.cleartraders.common.util.tools.CommonTools;

/** 
 * MyEclipse Struts
 * Creation date: 03-06-2009
 * 
 * XDoclet definition:
 * @struts.form name="saveSMSPackageForm"
 */
public class SMSPackageForm extends ActionForm
{
    /**
     * 
     */
    private static final long serialVersionUID = -652129693326972566L;
    
    private String smspackage_id="";
    private String product_id="";
    private String smspackage_name="";
    private String smspackage_sms_included="";
    private String smspackage_cost="";
    private String paypal_button_id="";


    public String getPaypal_button_id()
    {
        return paypal_button_id;
    }

    public void setPaypal_button_id(String paypal_button_id)
    {
        this.paypal_button_id = paypal_button_id;
    }

    /** 
     * Method validate
     * @param mapping
     * @param request
     * @return ActionErrors
     */
    public ActionErrors validate(ActionMapping mapping,
            HttpServletRequest request)
    {
        ActionErrors errors = new ActionErrors();
        
        if(this.smspackage_id == null || this.smspackage_id.trim().length() == 0)
        {
            errors.add("error", new ActionMessage("smspackage.id.error"));
        }
        else if(this.smspackage_id.trim().length() > 100)
        {
            errors.add("error", new ActionMessage("smspackage.id.too.long.error"));
        }
        else
        {
            this.smspackage_id = CommonTools.filteDangerString(smspackage_id);
        }
        
        if(this.product_id == null || this.product_id.trim().length() == 0)
        {
            errors.add("error", new ActionMessage("smspackage.product.id.error"));
        }
        else if(this.product_id.trim().length() > 100)
        {
            errors.add("error", new ActionMessage("smspackage.product.id.too.long.error"));
        }
        else
        {
            this.product_id = CommonTools.filteDangerString(product_id);
        }
        
        if(this.smspackage_name == null || this.smspackage_name.trim().length() == 0)
        {
            errors.add("error", new ActionMessage("smspackage.no.name.error"));
        }
        else if(this.smspackage_name.trim().length() > 100)
        {
            errors.add("error", new ActionMessage("smspackage.name.too.long.error"));
        }
        else
        {
            this.smspackage_name = CommonTools.filteDangerString(smspackage_name);
        }
        
        
        if(this.smspackage_sms_included == null || this.smspackage_sms_included.trim().length() == 0)
        {
            errors.add("error", new ActionMessage("smspackage.no.sms.included.error"));
        }
        else if(this.smspackage_sms_included.trim().length() > 100)
        {
            errors.add("error", new ActionMessage("smspackage.sms.included.too.long.error"));
        }
        else
        {
            this.smspackage_sms_included = CommonTools.filteDangerString(smspackage_sms_included);
        }
                
        if(this.smspackage_cost == null || this.smspackage_cost.trim().length() == 0)
        {
            errors.add("error", new ActionMessage("smspackage.no.cost.error"));
        }
        else if(this.smspackage_cost.trim().length() > 100)
        {
            errors.add("error", new ActionMessage("smspackage.cost.too.long.error"));
        }
        else
        {
            this.smspackage_cost = CommonTools.filteDangerString(smspackage_cost);
        }     
        
        if(this.paypal_button_id == null || this.paypal_button_id.trim().length() == 0)
        {
            errors.add("error", new ActionMessage("smspackage.no.paypal.button.id.error"));
        }
        else if(this.paypal_button_id.trim().length() > 100)
        {
            errors.add("error", new ActionMessage("smspackage.paypal.button.id.too.long.error"));
        }
        else
        {
            this.paypal_button_id = CommonTools.filteDangerString(paypal_button_id);
        }
        
        return errors;
    }

    /** 
     * Method reset
     * @param mapping
     * @param request
     */
    public void reset(ActionMapping mapping, HttpServletRequest request)
    {
        // TODO Auto-generated method stub
    }
    

    public String getProduct_id()
    {
        return product_id;
    }

    public void setProduct_id(String product_id)
    {
        this.product_id = product_id;
    }

    public String getSmspackage_cost()
    {
        return smspackage_cost;
    }

    public void setSmspackage_cost(String smspackage_cost)
    {
        this.smspackage_cost = smspackage_cost;
    }

    public String getSmspackage_id()
    {
        return smspackage_id;
    }

    public void setSmspackage_id(String smspackage_id)
    {
        this.smspackage_id = smspackage_id;
    }

    public String getSmspackage_name()
    {
        return smspackage_name;
    }

    public void setSmspackage_name(String smspackage_name)
    {
        this.smspackage_name = smspackage_name;
    }

    public String getSmspackage_sms_included()
    {
        return smspackage_sms_included;
    }

    public void setSmspackage_sms_included(String smspackage_sms_included)
    {
        this.smspackage_sms_included = smspackage_sms_included;
    }
    
}
