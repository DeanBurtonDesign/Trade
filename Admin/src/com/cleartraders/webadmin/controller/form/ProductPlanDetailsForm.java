/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.cleartraders.webadmin.controller.form;

import javax.servlet.http.HttpServletRequest;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;

import com.cleartraders.common.util.tools.CommonTools;

/** 
 * MyEclipse Struts
 * Creation date: 03-05-2009
 * 
 * XDoclet definition:
 * @struts.form name="addOrUpdateProductPlanDetailsForm"
 */
public class ProductPlanDetailsForm extends ActionForm
{
    /*
     * Generated Methods
     */

    /**
     * 
     */
    private static final long serialVersionUID = 8873420041693425075L;
    
    private String product_id = "";
    private String product_status = "";
    private String product_type = "";
    private String product_name = "";
    private String product_period = "";
    private String product_markets = "";
    private String product_price = "";
    private String product_sms = "";
    private String operation_type = "";
    private String paypal_btn_id="";


    /** 
     * Method validate
     * @param mapping
     * @param request
     * @return ActionErrors
     */
    public ActionErrors validate(ActionMapping mapping,
            HttpServletRequest request)
    {
        ActionErrors errors = new ActionErrors();
        
        if(this.product_id == null || this.product_id.trim().length() == 0)
        {
            errors.add("error", new ActionMessage("product.add.or.update.request.data.error"));
        }
        else if(this.product_id.trim().length() > 100)
        {
            errors.add("error", new ActionMessage("product.add.or.update.request.data.error"));
        }
        else
        {
            this.product_id = CommonTools.filteDangerString(product_id);
        }
        
        if(this.product_status == null || this.product_status.trim().length() == 0)
        {
            errors.add("product_status", new ActionMessage("no.product.status.error"));
        }
        else if(this.product_status.trim().length() > 100)
        {
            errors.add("product_status", new ActionMessage("product.status.too.long.error"));
        }
        else
        {
            this.product_status = CommonTools.filteDangerString(product_status);
        }
        
        if(this.product_type == null || this.product_type.trim().length() == 0)
        {
            errors.add("product_type", new ActionMessage("no.product.type.error"));
        }
        else if(this.product_type.trim().length() > 100)
        {
            errors.add("product_type", new ActionMessage("product.type.too.long.error"));
        }
        else
        {
            this.product_type = CommonTools.filteDangerString(product_type);
        }
        
        if(this.product_name == null || this.product_name.trim().length() == 0)
        {
            errors.add("product_name", new ActionMessage("no.product.name.error"));
        }
        else if(this.product_name.trim().length() > 100)
        {
            errors.add("product_name", new ActionMessage("product.name.too.long.error"));
        }
        else
        {
            this.product_name = CommonTools.filteDangerString(product_name);
        }
        
        if(this.product_period == null || this.product_period.trim().length() == 0)
        {
            errors.add("product_period", new ActionMessage("no.product.period.error"));
        }
        else if(this.product_period.trim().length() > 100)
        {
            errors.add("product_period", new ActionMessage("product.period.too.long.error"));
        }
        else
        {
            this.product_period = CommonTools.filteDangerString(product_period);
        }
                
        if(this.product_markets == null || this.product_markets.trim().length() == 0)
        {
            errors.add("product_markets", new ActionMessage("no.product.markets.error"));
        }
        else if(this.product_markets.trim().length() > 100)
        {
            errors.add("product_markets", new ActionMessage("product.markets.too.long.error"));
        }
        else
        {
            this.product_markets = CommonTools.filteDangerString(product_markets);
        }
        
        if(this.product_price == null || this.product_price.trim().length() == 0)
        {
            errors.add("product_price", new ActionMessage("no.product.price.error"));
        }
        else if(this.product_price.trim().length() > 100)
        {
            errors.add("product_price", new ActionMessage("product.price.too.long.error"));
        }
        else
        {
            this.product_price = CommonTools.filteDangerString(product_price);
        }
        
        if(this.product_sms == null || this.product_sms.trim().length() == 0)
        {
            errors.add("product_sms", new ActionMessage("no.product.sms.id.error"));
        }
        else if(this.product_sms.trim().length() > 100)
        {
            errors.add("product_sms", new ActionMessage("product.sms.too.long.error"));
        }
        else
        {
            this.product_sms = CommonTools.filteDangerString(product_sms);
        }
        
        if(this.paypal_btn_id == null || this.paypal_btn_id.trim().length() == 0)
        {
            errors.add("paypal_btn_id", new ActionMessage("no.paypal.button.id.error"));
        }
        else if(this.paypal_btn_id.trim().length() > 100)
        {
            errors.add("paypal_btn_id", new ActionMessage("product.paypal.button.id.too.long.error"));
        }
        else
        {
            this.paypal_btn_id = CommonTools.filteDangerString(paypal_btn_id);
        }
                        
        return errors;
    }

    /** 
     * Method reset
     * @param mapping
     * @param request
     */
    public void reset(ActionMapping mapping, HttpServletRequest request)
    {
        // TODO Auto-generated method stub
    }
    
    public String getPaypal_btn_id()
    {
        return paypal_btn_id;
    }

    public void setPaypal_btn_id(String paypal_btn_id)
    {
        this.paypal_btn_id = paypal_btn_id;
    }
    
    public String getProduct_id()
    {
        return product_id;
    }

    public void setProduct_id(String product_id)
    {
        this.product_id = product_id;
    }

    public String getProduct_markets()
    {
        return product_markets;
    }

    public void setProduct_markets(String product_markets)
    {
        this.product_markets = product_markets;
    }

    public String getProduct_name()
    {
        return product_name;
    }

    public void setProduct_name(String product_name)
    {
        this.product_name = product_name;
    }

    public String getProduct_period()
    {
        return product_period;
    }

    public void setProduct_period(String product_period)
    {
        this.product_period = product_period;
    }

    public String getProduct_price()
    {
        return product_price;
    }

    public void setProduct_price(String product_price)
    {
        this.product_price = product_price;
    }

    public String getProduct_sms()
    {
        return product_sms;
    }

    public void setProduct_sms(String product_sms)
    {
        this.product_sms = product_sms;
    }

    public String getProduct_status()
    {
        return product_status;
    }

    public void setProduct_status(String product_status)
    {
        this.product_status = product_status;
    }

    public String getProduct_type()
    {
        return product_type;
    }

    public void setProduct_type(String product_type)
    {
        this.product_type = product_type;
    }
    public String getOperation_type()
    {
        return operation_type;
    }

    public void setOperation_type(String operation_type)
    {
        this.operation_type = operation_type;
    }
    
}
