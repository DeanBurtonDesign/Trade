/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.cleartraders.webadmin.controller.form;

import javax.servlet.http.HttpServletRequest;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;

import com.cleartraders.common.util.tools.CommonTools;

/** 
 * MyEclipse Struts
 * Creation date: 03-05-2009
 * 
 * XDoclet definition:
 * @struts.form name="updateMemberDetailsForm"
 */
public class MemberDetailsForm extends ActionForm
{
    /*
     * Generated Methods
     */

    /**
     * 
     */
    private static final long serialVersionUID = -4029152593838171327L;
    
    private String member_id="";
    private String member_type_value = "";
    private String member_plan = "";
    private String member_email = "";
    private String member_password = "";
    private String operation_type = "";
    private String member_first_name = "";
    private String member_last_name = "";
    private String member_mobile = "";
    private String member_country = "";
    private String member_timezone="";
    private String member_signup_date = "";
    private String member_expired_date = "";
    private String member_billing_status = "";
    private String member_sms_credits = "";
    private String member_subscription_markets="";

    public String getMember_expired_date()
    {
        return member_expired_date;
    }

    public void setMember_expired_date(String member_expired_date)
    {
        this.member_expired_date = member_expired_date;
    }

    public String getMember_timezone()
    {
        return member_timezone;
    }

    public void setMember_timezone(String member_timezone)
    {
        this.member_timezone = member_timezone;
    }

    public String getMember_password()
    {
        return member_password;
    }

    public void setMember_password(String member_password)
    {
        this.member_password = member_password;
    }

    public String getMember_subscription_markets()
    {
        return member_subscription_markets;
    }

    public void setMember_subscription_markets(String member_subscription_markets)
    {
        this.member_subscription_markets = member_subscription_markets;
    }

    public String getMember_id()
    {
        return member_id;
    }

    public void setMember_id(String member_id)
    {
        this.member_id = member_id;
    }

    public String getOperation_type()
    {
        return operation_type;
    }

    public void setOperation_type(String operation_type)
    {
        this.operation_type = operation_type;
    }

    public String getMember_billing_status()
    {
        return member_billing_status;
    }

    public void setMember_billing_status(String member_billing_status)
    {
        this.member_billing_status = member_billing_status;
    }

    public String getMember_country()
    {
        return member_country;
    }

    public void setMember_country(String member_country)
    {
        this.member_country = member_country;
    }

    public String getMember_email()
    {
        return member_email;
    }

    public void setMember_email(String member_email)
    {
        this.member_email = member_email;
    }

    public String getMember_first_name()
    {
        return member_first_name;
    }

    public void setMember_first_name(String member_first_name)
    {
        this.member_first_name = member_first_name;
    }

    public String getMember_last_name()
    {
        return member_last_name;
    }

    public void setMember_last_name(String member_last_name)
    {
        this.member_last_name = member_last_name;
    }

    public String getMember_mobile()
    {
        return member_mobile;
    }

    public void setMember_mobile(String member_mobile)
    {
        this.member_mobile = member_mobile;
    }

    public String getMember_plan()
    {
        return member_plan;
    }

    public void setMember_plan(String member_plan)
    {
        this.member_plan = member_plan;
    }

    public String getMember_signup_date()
    {
        return member_signup_date;
    }

    public void setMember_signup_date(String member_signup_date)
    {
        this.member_signup_date = member_signup_date;
    }

    public String getMember_sms_credits()
    {
        return member_sms_credits;
    }

    public void setMember_sms_credits(String member_sms_credits)
    {
        this.member_sms_credits = member_sms_credits;
    }

    public String getMember_type_value()
    {
        return member_type_value;
    }

    public void setMember_type_value(String member_type_value)
    {
        this.member_type_value = member_type_value;
    }

    /** 
     * Method validate
     * @param mapping
     * @param request
     * @return ActionErrors
     */
    public ActionErrors validate(ActionMapping mapping,
            HttpServletRequest request)
    {
        ActionErrors errors = new ActionErrors();
        
        if(this.member_subscription_markets == null)
        {
            errors.add("error", new ActionMessage("member.add.or.update.request.data.error"));
        }
        
        if(this.member_id == null || this.member_id.trim().length() == 0)
        {
            errors.add("error", new ActionMessage("member.add.or.update.request.data.error"));
        }
        else if(this.member_id.trim().length() > 100)
        {
            errors.add("error", new ActionMessage("member.add.or.update.request.data.error"));
        }
        else
        {
            this.member_id = CommonTools.filteDangerString(member_id);
        }
        
        if(this.member_first_name == null || this.member_first_name.trim().length() == 0)
        {
            errors.add("firstname", new ActionMessage("member.no.firstname.error"));
        }
        else if(this.member_first_name.trim().length() > 100)
        {
            errors.add("firstname", new ActionMessage("member.firstname.too.long.error"));
        }
        else
        {
            this.member_first_name = CommonTools.filteDangerString(member_first_name);
        }
        
        if(this.member_password == null || this.member_password.trim().length() == 0)
        {
            errors.add("password", new ActionMessage("member.no.password.error"));
        }
        else if(this.member_password.trim().length() > 100)
        {
            errors.add("password", new ActionMessage("member.password.too.long.error"));
        }
        else
        {
            this.member_password = CommonTools.filteDangerString(member_password);
        }
        
        if(this.member_last_name == null || this.member_last_name.trim().length() == 0)
        {
            errors.add("lastname", new ActionMessage("member.no.lastname.error"));
        }
        else if(this.member_last_name.trim().length() > 100)
        {
            errors.add("lastname", new ActionMessage("member.lastname.too.long.error"));
        }
        else
        {
            this.member_last_name = CommonTools.filteDangerString(member_last_name);
        }
        
        if(this.member_email == null || this.member_email.trim().length() == 0)
        {
            errors.add("email", new ActionMessage("member.no.email.error"));
        }
        else if(this.member_email.trim().length() > 100)
        {
            errors.add("email", new ActionMessage("member.email.too.long.error"));
        }
        else
        {
            this.member_email = CommonTools.filteDangerString(member_email);
            
            if(!CommonTools.isEMailValid(member_email))
            {
                errors.add("email", new ActionMessage("member.email.format.error"));
            }
        }
        
        if(this.member_type_value == null || this.member_type_value.trim().length() == 0)
        {
            errors.add("membertype", new ActionMessage("member.no.member.type.error"));
        }
        else if(this.member_type_value.trim().length() > 100)
        {
            errors.add("membertype", new ActionMessage("member.member.type.too.long.error"));
        }
        else
        {
            this.member_type_value = CommonTools.filteDangerString(member_type_value);
        }
                
        if(this.member_plan == null || this.member_plan.trim().length() == 0)
        {
            errors.add("memberlevel", new ActionMessage("member.no.member.level.error"));
        }
        else if(this.member_plan.trim().length() > 100)
        {
            errors.add("memberlevel", new ActionMessage("member.member.level.too.long.error"));
        }
        else
        {
            this.member_plan = CommonTools.filteDangerString(member_plan);
        }
        
        if(this.member_mobile == null || this.member_mobile.trim().length() == 0)
        {
            errors.add("mobilenumber", new ActionMessage("member.no.mobile.number.error"));
        }
        else if(this.member_mobile.trim().length() > 100)
        {
            errors.add("mobilenumber", new ActionMessage("member.mobile.number.too.long.error"));
        }
        else
        {
            this.member_mobile = CommonTools.filteDangerString(member_mobile);
        }
        
        if(this.member_country == null || this.member_country.trim().length() == 0)
        {
            errors.add("countryid", new ActionMessage("member.no.country.id.error"));
        }
        else if(this.member_country.trim().length() > 100)
        {
            errors.add("countryid", new ActionMessage("member.country.id.too.long.error"));
        }
        else
        {
            this.member_country = CommonTools.filteDangerString(member_country);
        }
        
        if(this.member_timezone == null || this.member_timezone.trim().length() == 0)
        {
            errors.add("timezone", new ActionMessage("member.no.timezone.id.error"));
        }
        else if(this.member_timezone.trim().length() > 100)
        {
            errors.add("timezone", new ActionMessage("member.timezone.id.too.long.error"));
        }
        else
        {
            this.member_timezone = CommonTools.filteDangerString(member_timezone);
        }
                        
        if(this.member_signup_date == null || this.member_signup_date.trim().length() == 0)
        {
            errors.add("signupdate", new ActionMessage("member.no.signupdate.error"));
        }
        else if(this.member_signup_date.trim().length() > 100)
        {
            errors.add("signupdate", new ActionMessage("member.signupdate.too.long.error"));
        }
        else
        {
            this.member_signup_date = CommonTools.filteDangerString(member_signup_date);
        }
        
        if(this.member_expired_date == null || this.member_expired_date.trim().length() == 0)
        {
            errors.add("expireddate", new ActionMessage("member.no.expireddate.error"));
        }
        else if(this.member_expired_date.trim().length() > 100)
        {
            errors.add("expireddate", new ActionMessage("member.expireddate.too.long.error"));
        }
        else
        {
            this.member_expired_date = CommonTools.filteDangerString(member_expired_date);
        }
        
        if(this.member_billing_status == null || this.member_billing_status.trim().length() == 0)
        {
            errors.add("billingstatus", new ActionMessage("member.no.billing.status.error"));
        }
        else if(this.member_billing_status.trim().length() > 100)
        {
            errors.add("billingstatus", new ActionMessage("member.billing.status.too.long.error"));
        }
        else
        {
            this.member_billing_status = CommonTools.filteDangerString(member_billing_status);
        }
                
        if(this.member_sms_credits == null || this.member_sms_credits.trim().length() == 0)
        {
            errors.add("smscredits", new ActionMessage("member.no.sms.credits.error"));
        }
        else if(this.member_sms_credits.trim().length() > 100)
        {
            errors.add("smscredits", new ActionMessage("member.sms.credits.too.long.error"));
        }
        else
        {
            this.member_sms_credits = CommonTools.filteDangerString(member_sms_credits);
        }
                       
        
        return errors;
    }

    /** 
     * Method reset
     * @param mapping
     * @param request
     */
    public void reset(ActionMapping mapping, HttpServletRequest request)
    {
        // TODO Auto-generated method stub
    }
}
