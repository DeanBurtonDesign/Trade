/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.cleartraders.webadmin.controller.form;

import javax.servlet.http.HttpServletRequest;

import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;

import com.cleartraders.common.util.tools.CommonTools;

/** 
 * MyEclipse Struts
 * Creation date: 05-04-2009
 * 
 * XDoclet definition:
 * @struts.form name="addOrUpdateStrategyForm"
 */
public class StrategyForm extends ActionForm
{
    /*
     * Generated Methods
     */

    /**
     * 
     */
    private static final long serialVersionUID = -4671492803873621139L;

    private String strategy_id="";
    private String strategy_status = "";
    private String all_related_markets = "";
    private String all_related_product_plans = "";
    private String all_related_timeframe = "";
    private String system_name = "";
    private String common_name = "";
    private String link_url = "";
    private String description_content = "";
    private String operation_type = "";
    
    public String getDescription_content()
    {
        return description_content;
    }

    public void setDescription_content(String description_content)
    {
        this.description_content = description_content;
    }

    public String getOperation_type()
    {
        return operation_type;
    }

    public void setOperation_type(String operation_type)
    {
        this.operation_type = operation_type;
    }

    public String getAll_related_markets()
    {
        return all_related_markets;
    }

    public void setAll_related_markets(String all_related_markets)
    {
        this.all_related_markets = all_related_markets;
    }

    public String getAll_related_product_plans()
    {
        return all_related_product_plans;
    }

    public void setAll_related_product_plans(String all_related_product_plans)
    {
        this.all_related_product_plans = all_related_product_plans;
    }

    public String getAll_related_timeframe()
    {
        return all_related_timeframe;
    }

    public void setAll_related_timeframe(String all_related_timeframe)
    {
        this.all_related_timeframe = all_related_timeframe;
    }

    public String getCommon_name()
    {
        return common_name;
    }

    public void setCommon_name(String common_name)
    {
        this.common_name = common_name;
    }

    public String getLink_url()
    {
        return link_url;
    }

    public void setLink_url(String link_url)
    {
        this.link_url = link_url;
    }

    public String getStrategy_id()
    {
        return strategy_id;
    }

    public void setStrategy_id(String strategy_id)
    {
        this.strategy_id = strategy_id;
    }

    public String getStrategy_status()
    {
        return strategy_status;
    }

    public void setStrategy_status(String strategy_status)
    {
        this.strategy_status = strategy_status;
    }

    public String getSystem_name()
    {
        return system_name;
    }

    public void setSystem_name(String system_name)
    {
        this.system_name = system_name;
    }

    /** 
     * Method validate
     * @param mapping
     * @param request
     * @return ActionErrors
     */
    public ActionErrors validate(ActionMapping mapping, HttpServletRequest request)
    {
        ActionErrors errors = new ActionErrors();
        
        if(this.all_related_markets == null || this.all_related_product_plans == null || this.all_related_timeframe == null)
        {
            errors.add("error", new ActionMessage("strategy.add.or.update.request.data.error"));
        }
        
        if(this.strategy_id == null || this.strategy_id.trim().length() == 0)
        {
            errors.add("error", new ActionMessage("strategy.add.or.update.request.data.error"));
        }
        else if(this.strategy_id.trim().length() > 100)
        {
            errors.add("error", new ActionMessage("strategy.add.or.update.request.data.error"));
        }
        else
        {
            this.strategy_id = CommonTools.filteDangerString(strategy_id);
        }
                
        if(this.strategy_status == null || this.strategy_status.trim().length() == 0)
        {
            errors.add("strategy_status", new ActionMessage("strategy.no.strategy.status.error"));
        }
        else if(this.strategy_status.trim().length() > 100)
        {
            errors.add("strategy_status", new ActionMessage("strategy.strategy.status.too.long.error"));
        }
        else
        {
            this.strategy_status = CommonTools.filteDangerString(strategy_status);
        }
        
        if(this.common_name == null || this.common_name.trim().length() == 0)
        {
            errors.add("common_name", new ActionMessage("strategy.no.common.name.error"));
        }
        else if(this.common_name.trim().length() > 100)
        {
            errors.add("common_name", new ActionMessage("strategy.common.name.too.long.error"));
        }
        else
        {
            this.common_name = CommonTools.filteDangerString(common_name);
        }
        
        if(this.system_name == null || this.system_name.trim().length() == 0)
        {
            errors.add("system_name", new ActionMessage("strategy.no.system.name.error"));
        }
        else if(this.system_name.trim().length() > 100)
        {
            errors.add("system_name", new ActionMessage("strategy.system.name.too.long.error"));
        }
        else
        {
            this.system_name = CommonTools.filteDangerString(system_name);
        }
        
        if(this.link_url == null || this.link_url.trim().length() == 0)
        {
            errors.add("link_url", new ActionMessage("strategy.no.link.url.error"));
        }
        else if(this.link_url.trim().length() > 100)
        {
            errors.add("link_url", new ActionMessage("strategy.link.url.too.long.error"));
        }
        else
        {
            this.link_url = CommonTools.filteDangerString(link_url);
        }
        
        if(this.description_content == null || this.description_content.trim().length() == 0)
        {
            errors.add("description", new ActionMessage("strategy.no.description.error"));
        }
        else if(this.description_content.trim().length() > 250)
        {
            errors.add("description", new ActionMessage("strategy.description.too.long.error"));
        }
        else
        {
            this.description_content = CommonTools.filteDangerString(description_content);
        }
        
        return errors;
    }

    /** 
     * Method reset
     * @param mapping
     * @param request
     */
    public void reset(ActionMapping mapping, HttpServletRequest request)
    {
        // TODO Auto-generated method stub
    }
}
