/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.cleartraders.webadmin.controller.action;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;

import com.cleartraders.common.entity.ProductBean;
import com.cleartraders.common.entity.UserBean;
import com.cleartraders.common.util.log.DebugLevel;
import com.cleartraders.common.util.log.LogTools;
import com.cleartraders.common.util.tools.CommonTools;
import com.cleartraders.webadmin.AdminConstants;
import com.cleartraders.webadmin.controller.form.ProductPlanDetailsForm;
import com.cleartraders.webadmin.model.productplans.ProductPlansController;

/** 
 * MyEclipse Struts
 * Creation date: 03-05-2009
 * 
 * XDoclet definition:
 * @struts.action path="/addOrUpdateProductPlanDetails" name="addOrUpdateProductPlanDetailsForm" input="/productplans/productplans.jsp" scope="request" validate="true"
 */
public class AddOrUpdateProductPlanDetailsAction extends BaseAction
{
    protected ActionForward executeAction(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException
    {
        String forwardName = AdminConstants.FORWARD_FAILED;
        ActionMessages errors = new ActionMessages();
        ProductPlansController productController = new ProductPlansController();
        
        try
        {
            ProductPlanDetailsForm addOrUpdateProductPlanDetailsForm = (ProductPlanDetailsForm) form;
            
            //for log info
            UserBean userBean = (UserBean)request.getSession().getAttribute(AdminConstants.USER_KEY);
            LogTools.getInstance().insertLog(DebugLevel.INFO,"Request AddOrUpdateProductPlanDetailsAction from Account:"+userBean.getLogin_name()+
                    ", Target product:"+addOrUpdateProductPlanDetailsForm.getProduct_name()+", Operation Type:"+addOrUpdateProductPlanDetailsForm.getOperation_type());
            
            
            ProductBean productBean = extractProductInfo(addOrUpdateProductPlanDetailsForm);
            if(null == productBean)
            {
                errors.add("error", new ActionMessage("product.add.or.update.request.data.error"));                
                saveErrors(request, errors);                
                return new ActionForward(mapping.getInput());
            }
            
            int operationType = Integer.parseInt(addOrUpdateProductPlanDetailsForm.getOperation_type());
            
            if(operationType == AdminConstants.ADD_OPERATION_TYPE)
            {
                if(productController.addProduct(productBean))
                {
                    forwardName = AdminConstants.FORWARD_SUCCESS;
                    
                    LogTools.getInstance().insertLog(DebugLevel.INFO,"Add new product "+productBean.getName()+" successfully!");
                }
                else
                {
                    errors.add("error", new ActionMessage("product.add.failed"));                
                    saveErrors(request, errors);
                    
                    LogTools.getInstance().insertLog(DebugLevel.ERROR,"Add new product "+productBean.getName()+" failed!");
                }
            }
            else if(operationType == AdminConstants.UPDATE_OPERATION_TYPE)
            {
                if(productController.updateProduct(productBean))
                {
                    forwardName = AdminConstants.FORWARD_SUCCESS;
                    
                    LogTools.getInstance().insertLog(DebugLevel.INFO,"Update product "+productBean.getName()+" successfully!");
                }
                else
                {
                    errors.add("error", new ActionMessage("product.update.failed"));                
                    saveErrors(request, errors);
                    
                    LogTools.getInstance().insertLog(DebugLevel.ERROR,"Update product "+productBean.getName()+" failed!");
                }
            }
            else
            {
                errors.add("error", new ActionMessage("product.add.or.update.request.data.error"));                
                saveErrors(request, errors);   
                
                LogTools.getInstance().insertLog(DebugLevel.ERROR,"Add or Update product "+productBean.getName()+", but operation type is wrong!");
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
            LogTools.getInstance().insertLog(DebugLevel.ERROR,CommonTools.getExceptionDescribe(e));            
            
            errors.add("error", new ActionMessage("product.add.or.update.request.data.error"));            
            saveErrors(request, errors);
        }

        return mapping.findForward(forwardName);
    }
    
    private ProductBean extractProductInfo(ProductPlanDetailsForm addOrUpdateProductPlanDetailsForm)
    {
        ProductBean oProduct = new ProductBean();
        oProduct.setId(Long.parseLong(addOrUpdateProductPlanDetailsForm.getProduct_id()));
        oProduct.setActive(Integer.parseInt(addOrUpdateProductPlanDetailsForm.getProduct_status()));
        oProduct.setIncludeSMS(Integer.parseInt(addOrUpdateProductPlanDetailsForm.getProduct_sms()));
        oProduct.setName(addOrUpdateProductPlanDetailsForm.getProduct_name());
        oProduct.setPaid(Integer.parseInt(addOrUpdateProductPlanDetailsForm.getProduct_type()));
        oProduct.setPeriod(Integer.parseInt(addOrUpdateProductPlanDetailsForm.getProduct_period()));
        oProduct.setPrice(Double.parseDouble(addOrUpdateProductPlanDetailsForm.getProduct_price()));
        oProduct.setTotalMarkets(Integer.parseInt(addOrUpdateProductPlanDetailsForm.getProduct_markets()));
        oProduct.setPaypal_btn_id(addOrUpdateProductPlanDetailsForm.getPaypal_btn_id());
        
        return oProduct;
    }
}
