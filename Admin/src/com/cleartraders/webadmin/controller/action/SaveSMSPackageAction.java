/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.cleartraders.webadmin.controller.action;

import java.io.IOException;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;

import com.cleartraders.common.entity.SmsPackageBean;
import com.cleartraders.common.entity.UserBean;
import com.cleartraders.common.util.log.DebugLevel;
import com.cleartraders.common.util.log.LogTools;
import com.cleartraders.common.util.tools.CommonTools;
import com.cleartraders.webadmin.AdminConstants;
import com.cleartraders.webadmin.controller.form.SMSPackageForm;
import com.cleartraders.webadmin.model.smscredits.SMSCreditsController;

/** 
 * MyEclipse Struts
 * Creation date: 03-06-2009
 * 
 * XDoclet definition:
 * @struts.action path="/saveSMSPackage" name="saveSMSPackageForm" input="/smscredits/smscredits.jsp" scope="request" validate="true"
 */
public class SaveSMSPackageAction extends BaseAction
{
    protected ActionForward executeAction(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException
    {
        SMSCreditsController smspackageController = new SMSCreditsController();
        String forwardName = AdminConstants.FORWARD_FAILED;
        ActionMessages errors = new ActionMessages();
        
        try
        {            
            SMSPackageForm saveSMSPackageForm = (SMSPackageForm) form;
            
            SmsPackageBean smsPackageBean = new SmsPackageBean();
            smsPackageBean.setId(Long.parseLong(saveSMSPackageForm.getSmspackage_id()));
            smsPackageBean.setProduct_id(Long.parseLong(saveSMSPackageForm.getProduct_id()));
            smsPackageBean.setName(saveSMSPackageForm.getSmspackage_name());
            smsPackageBean.setSms_cost(Double.parseDouble(saveSMSPackageForm.getSmspackage_cost()));
            smsPackageBean.setSms_included(Integer.parseInt(saveSMSPackageForm.getSmspackage_sms_included()));
            smsPackageBean.setPaypal_button_id(saveSMSPackageForm.getPaypal_button_id());
            
            //for log info
            UserBean currentAdmin = (UserBean)request.getSession().getAttribute(AdminConstants.USER_KEY);
            LogTools.getInstance().insertLog(DebugLevel.INFO,"Request SaveSMSPackageAction from Account:"+currentAdmin.getLogin_name()+
                    ", SMS package:"+smsPackageBean.getName());
            
            if(smsPackageBean.getId() == -1)
            {
                //this is new sms package
                if(smspackageController.addSMSPackage(smsPackageBean))
                {
                    forwardName = AdminConstants.FORWARD_SUCCESS;
                    
                    LogTools.getInstance().insertLog(DebugLevel.INFO,"Add new SMS package successfully!");
                }
                else
                {
                    errors.add("error", new ActionMessage("smspackage.add.failed"));                
                    saveErrors(request, errors);
                    
                    LogTools.getInstance().insertLog(DebugLevel.INFO,"Add new SMS package failed!");
                }
            }
            else
            {
                //this is old sms package, just update it
                if(smspackageController.updateSMSPackage(smsPackageBean))
                {
                    forwardName = AdminConstants.FORWARD_SUCCESS;
                    
                    LogTools.getInstance().insertLog(DebugLevel.INFO,"Update SMS package successfully!");
                }
                else
                {
                    errors.add("error", new ActionMessage("smspackage.update.failed"));                
                    saveErrors(request, errors);
                    
                    LogTools.getInstance().insertLog(DebugLevel.INFO,"Update SMS package failed!");
                }
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
            LogTools.getInstance().insertLog(DebugLevel.ERROR,CommonTools.getExceptionDescribe(e));            
            
            errors.add("error", new ActionMessage("smspackage.add.or.update.request.data.error"));            
            saveErrors(request, errors);
        }
        finally
        {
            List<SmsPackageBean> allSMSPackages = new SMSCreditsController().getAllSMSPackages();
            request.setAttribute(AdminConstants.SMS_PACKAGE_LIST, allSMSPackages);
        }
        
        return mapping.findForward(forwardName);
    }
}
