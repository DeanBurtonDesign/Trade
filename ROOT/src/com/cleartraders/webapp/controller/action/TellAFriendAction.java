/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.cleartraders.webapp.controller.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;

import com.cleartraders.common.util.log.DebugLevel;
import com.cleartraders.common.util.log.LogTools;
import com.cleartraders.common.util.tools.CommonTools;
import com.cleartraders.webapp.WebConstants;
import com.cleartraders.webapp.controller.form.TellAFriendForm;
import com.cleartraders.webapp.model.bean.TellAFriendsBean;
import com.cleartraders.webapp.model.contact.ContactController;

/** 
 * MyEclipse Struts
 * Creation date: 03-08-2009
 * 
 * XDoclet definition:
 * @struts.action path="/tellAFriend" name="tellAFriendForm" input="/tell-a-friend.jsp" scope="request" validate="true"
 */
public class TellAFriendAction extends Action
{
    /*
     * Generated Methods
     */

    /** 
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response)
    {
        String forwardName=WebConstants.FORWARD_FAILED;
        
        try
        {
            LogTools.getInstance().insertLog(DebugLevel.INFO,"Tell A Friend request from IP:"+request.getRemoteAddr());
            
            TellAFriendForm tellAFriendForm = (TellAFriendForm) form;
            
            TellAFriendsBean oTellAFriends = new TellAFriendsBean();
            oTellAFriends.setSender_name(tellAFriendForm.getSender_name());
            oTellAFriends.setSender_email(tellAFriendForm.getSender_email());
            oTellAFriends.setReceiver_email_1(tellAFriendForm.getReceiver_email_1());
            oTellAFriends.setReceiver_email_2(tellAFriendForm.getReceiver_email_2());
            oTellAFriends.setReceiver_name_1(tellAFriendForm.getReceiver_name_1());
            oTellAFriends.setReceiver_name_2(tellAFriendForm.getReceiver_name_2());
            
            if(new ContactController().tellAFriends(oTellAFriends))
            {
                LogTools.getInstance().insertLog(DebugLevel.INFO,"Successfully to handle Tell A Friend request from IP:"+request.getRemoteAddr());
                
                forwardName=WebConstants.FORWARD_SUCCESS;
                
                ActionMessages messages = new ActionMessages();
                messages.add("request_result", new ActionMessage("tellafriends.send.successfully"));
              
                saveErrors(request, messages);
            }
            else
            {
                LogTools.getInstance().insertLog(DebugLevel.ERROR,"Failed to handle Tell A Friend request from IP:"+request.getRemoteAddr());
                
                ActionMessages errors = new ActionMessages();
                errors.add("error", new ActionMessage("tellafriends.send.failed"));
              
                saveErrors(request, errors);
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
            
            LogTools.getInstance().insertLog(DebugLevel.ERROR,CommonTools.getExceptionDescribe(e));
        }
        
        return mapping.findForward(forwardName);
    }
}
