/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.cleartraders.webapp.controller.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.cleartraders.common.entity.UserBean;
import com.cleartraders.common.util.log.DebugLevel;
import com.cleartraders.common.util.log.LogTools;
import com.cleartraders.common.util.tools.CommonTools;
import com.cleartraders.webapp.WebConstants;
import com.cleartraders.webapp.controller.form.SelectMarketForm;
import com.cleartraders.webapp.model.bean.UserSignalPreferenceBean;
import com.cleartraders.webapp.model.myaccount.AccountController;

/** 
 * MyEclipse Struts
 * Creation date: 09-29-2008
 * 
 * XDoclet definition:
 * @struts.action path="/myaccount/selectMarket" name="selectMarketForm" scope="request" validate="true"
 * @struts.action-forward name="failed" path="/myaccount/selector.jsp"
 * @struts.action-forward name="sessionended" path="/login/userLogin.jsp"
 * @struts.action-forward name="successful" path="/myaccount/mysignals.jsp"
 */
public class SelectMarketAction extends BaseAction
{
    /*
     * Generated Methods
     */

    /** 
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward executeAction(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response)
    {
        String forwardName=WebConstants.FORWARD_FAILED;
        
        try
        {
            SelectMarketForm selectMarketForm = (SelectMarketForm) form;
            if(selectMarketForm.getCurrent_market_id() == null || selectMarketForm.getUpdate_result() == null)
            {
                return mapping.findForward(forwardName);
            }
            
            HttpSession session = request.getSession();
            
            //Base action already handle logout or timeout issue, so, here we don't need check
            UserBean oUserBean = (UserBean)session.getAttribute(WebConstants.USER_KEY);
            
            LogTools.getInstance().insertLog(DebugLevel.INFO,"Select Market request from User:"+oUserBean.getLogin_name()+", IP:"+request.getRemoteAddr());
            
            //parse new market
            String newMarketString = selectMarketForm.getUpdate_result();
            String[] newMarketValue = newMarketString.split(";");
            long newMarketID=0;
            long newSignalPeriodID=0;
            long newStrategyID = 0;
            
            boolean needUpdated = false;
            //in current system logic, it can be only choose one
            for(int i=0; i<newMarketValue.length; i++)
            {
                if(newMarketValue[i].trim().length() > 0)
                {
                    String newSingleMarket = newMarketValue[i];
                    String[] newSingleMarketList = newSingleMarket.split(",");
                    
                    if(newSingleMarketList.length == 2)
                    {
                        newMarketID = Long.parseLong(newSingleMarketList[0]);
                        newSignalPeriodID = Long.parseLong(newSingleMarketList[1]);
                        
                        needUpdated = true;
                        break;
                    }
                }
            }
            
            if(needUpdated)
            {
                //previous market id
                long previousMarketID = Long.parseLong(selectMarketForm.getCurrent_market_id());
                if(previousMarketID>=0)
                {
                    //it is change operation
                    new AccountController().changeMarketSubscription(oUserBean,previousMarketID,newMarketID,newSignalPeriodID,newStrategyID);
                }
                else
                {
                    //it is add operation
                    new AccountController().addMarketSubscription(oUserBean,newMarketID,newSignalPeriodID,newStrategyID);
                }
                
                List<UserSignalPreferenceBean> oAllMySignalPrferenceBean = (new AccountController()).getUserSignalPreferenceBean(oUserBean,false);        
                request.setAttribute(WebConstants.ALL_MY_ACTIVE_SIGNAL, oAllMySignalPrferenceBean);
            }
            
            forwardName=WebConstants.FORWARD_SUCCESS;
        }
        catch(Exception e)
        {
            e.printStackTrace();
            
            LogTools.getInstance().insertLog(DebugLevel.ERROR,CommonTools.getExceptionDescribe(e));
        }
        
        return mapping.findForward(forwardName);
    }
}
