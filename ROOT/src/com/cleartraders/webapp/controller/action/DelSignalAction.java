/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.cleartraders.webapp.controller.action;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.cleartraders.common.entity.UserBean;
import com.cleartraders.common.util.log.DebugLevel;
import com.cleartraders.common.util.log.LogTools;
import com.cleartraders.common.util.tools.CommonTools;
import com.cleartraders.webapp.WebConstants;
import com.cleartraders.webapp.controller.form.DelSignalForm;
import com.cleartraders.webapp.model.myaccount.AccountController;

/** 
 * MyEclipse Struts
 * Creation date: 05-11-2010
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class DelSignalAction extends BaseAction
{

    @Override
    protected ActionForward executeAction(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException
    {
        try
        {
            HttpSession session = request.getSession();
            
            //Base action already handle logout or timeout issue, so, here we don't need check
            UserBean oUserBean = (UserBean)session.getAttribute(WebConstants.USER_KEY);
            
            LogTools.getInstance().insertLog(DebugLevel.INFO,"Sort signals request from User:"+oUserBean.getLogin_name()+", IP:"+request.getRemoteAddr()+", time:"+System.currentTimeMillis());
            
            DelSignalForm delSignalForm = (DelSignalForm) form;
            String subscriptionIdString = delSignalForm.getSubscription_id();
            
            if(subscriptionIdString != null && subscriptionIdString.split(":").length == 3)
            {
                long strategyId = Long.parseLong(subscriptionIdString.split(":")[0]);
                long marketId = Long.parseLong(subscriptionIdString.split(":")[1]);
                long periodId = Long.parseLong(subscriptionIdString.split(":")[2]);
                
                AccountController accountController = new AccountController();
                accountController.delSignalSubscription(oUserBean, strategyId, marketId, periodId);
            }            
        }
        catch(Exception e)
        {
            e.printStackTrace();
            
            LogTools.getInstance().insertLog(DebugLevel.ERROR,CommonTools.getExceptionDescribe(e));
        }
        
        return null;
    }
}
