/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.cleartraders.webapp.controller.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;

import com.cleartraders.common.util.log.DebugLevel;
import com.cleartraders.common.util.log.LogTools;
import com.cleartraders.common.util.tools.CommonTools;
import com.cleartraders.webapp.WebConstants;
import com.cleartraders.webapp.controller.form.EnquiryForm;
import com.cleartraders.webapp.model.bean.EnquiryBean;
import com.cleartraders.webapp.model.contact.ContactController;

/** 
 * MyEclipse Struts
 * Creation date: 03-08-2009
 * 
 * XDoclet definition:
 * @struts.action path="/contactUs" name="contactUsForm" input="/contact-us.html" scope="request" validate="true"
 */
public class EnquiryAction extends Action
{
    /*
     * Generated Methods
     */

    /** 
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response)
    {
        String forwardName=WebConstants.FORWARD_FAILED;
        
        try
        {
            EnquiryForm contactUsForm = (EnquiryForm) form;
            HttpSession session = (HttpSession) request.getSession();
                    
            //check security code first
            String securitycode = contactUsForm.getSecurity_code();
            String sessionSecuritycode = (String) session.getAttribute(WebConstants.SECURITY_CODE);
            
            if(sessionSecuritycode.equals(securitycode))
            {
                EnquiryBean contactInfo = new EnquiryBean();
                
                contactInfo.setEmail(contactUsForm.getEmail());
                contactInfo.setEnquiry(contactUsForm.getEnquiry());
                contactInfo.setEnquiry_type(Integer.parseInt(contactUsForm.getEnquiry_type()));
                contactInfo.setFirst_name(contactUsForm.getFirst_name());
                contactInfo.setLast_name(contactUsForm.getLast_name());
                
                if(new ContactController().newContactUsMessage(contactInfo))
                {
                    LogTools.getInstance().insertLog(DebugLevel.INFO,"Enquiry request from IP:"+request.getRemoteAddr()+
                            ", Email:"+contactInfo.getEmail()+", Content:"+contactInfo.getEnquiry()+". Handle request successfully!");
                    
                    forwardName=WebConstants.FORWARD_SUCCESS;
                    
                    ActionMessages messages = new ActionMessages();
                    messages.add("request_result", new ActionMessage("enquiry.send.successfully"));
                  
                    saveErrors(request, messages);
                }
                else
                {
                    LogTools.getInstance().insertLog(DebugLevel.INFO,"Enquiry request from IP:"+request.getRemoteAddr()+
                            ", Email:"+contactInfo.getEmail()+", Content:"+contactInfo.getEnquiry()+". Handle request failed!");
                    
                    ActionMessages errors = new ActionMessages();
                    errors.add("error", new ActionMessage("enquiry.send.failed"));
                  
                    saveErrors(request, errors);
                }
            }
            else
            {
                ActionMessages errors = new ActionMessages();
                errors.add("security_code", new ActionMessage("enquiry.securitycode.error"));
              
                saveErrors(request, errors);
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
            
            LogTools.getInstance().insertLog(DebugLevel.ERROR,CommonTools.getExceptionDescribe(e));
        }
        
        return mapping.findForward(forwardName);
    }
}
