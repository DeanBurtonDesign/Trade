/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.cleartraders.webapp.controller.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;

import com.cleartraders.common.util.log.DebugLevel;
import com.cleartraders.common.util.log.LogTools;
import com.cleartraders.common.util.tools.CommonTools;
import com.cleartraders.webapp.WebConstants;
import com.cleartraders.webapp.model.contact.ContactController;

/** 
 * MyEclipse Struts
 * Creation date: 03-16-2009
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class ConfirmResetPasswordAction extends Action
{
    /*
     * Generated Methods
     */

    /** 
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response)
    {
        String forwardName=WebConstants.FORWARD_FAILED;
        
        try
        {
            //get parameter
            String userName = request.getParameter("username");
            String confirmedString = request.getParameter("id");
            
            if(null != userName && null != confirmedString)
            {
                ContactController oContact = new ContactController();
                if(oContact.confirmNewPassword(userName, confirmedString))
                {
                    LogTools.getInstance().insertLog(DebugLevel.INFO,"Confirm Reset Password request from IP:"+request.getRemoteAddr()+
                    " User:" + userName +", Confirm String:"+confirmedString+". Confirmed successfully!");
                    
                    forwardName=WebConstants.FORWARD_SUCCESS;
                    
                    ActionMessages infos = new ActionMessages();
                    infos.add("prompt_info", new ActionMessage("get.password.reset.success.prompt.info"));
                    saveErrors(request, infos);
                    
                    return mapping.findForward(forwardName);
                }
                else
                {
                    LogTools.getInstance().insertLog(DebugLevel.INFO,"Confirm Reset Password request from IP:"+request.getRemoteAddr()+
                            " User:" + userName +", Confirm String:"+confirmedString+". Confirmed failed!");
                    
                    ActionMessages infos = new ActionMessages();
                    infos.add("error", new ActionMessage("get.password.reset.failed.error"));
                    saveErrors(request, infos);
                }
            }
            else
            {
                LogTools.getInstance().insertLog(DebugLevel.INFO,"Confirm Reset Password request from IP:"+request.getRemoteAddr()+
                                                                 ", but the Username or Confirm String is NULL!");
                
                ActionMessages errors = new ActionMessages();
                errors.add("username", new ActionMessage("get.password.confirm.link.error"));
                saveErrors(request, errors);
            }      
        }
        catch(Exception e)
        {
            e.printStackTrace();
            
            LogTools.getInstance().insertLog(DebugLevel.ERROR,CommonTools.getExceptionDescribe(e));
        }
        
        return mapping.findForward(forwardName);
    }
}
